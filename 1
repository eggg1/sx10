def func10(arg48, arg49):
    var63 = func11(arg49, arg48)
    var64 = (1154559425 - -397 ^ var63) + arg48
    var65 = -537930040 ^ var64 | 1147145933
    if var64 < arg48:
        var66 = arg48 + (arg48 ^ var65 | var64)
    else:
        var66 = (var65 - arg49 + var64) - var65
    var67 = var63 & (var64 ^ (var65 | var65))
    var68 = var65 + var67 - arg48 & var64
    var69 = var64 + arg49
    var70 = (var65 ^ (var69 & var69)) - var64
    if var67 < arg49:
        var71 = var68 ^ var70 & 776 ^ var67
    else:
        var71 = arg48 | -355
    var72 = var64 + 445491564
    var73 = -11251312 & var63 | var65 + var70
    result = var73 | (-259 ^ arg48 - arg48 & arg49 + (448 & 4138262))
    return result
def func11(arg50, arg51):
    if arg50 < arg50:
        var52 = arg51 | (arg51 - 1502483570) & arg51
    else:
        var52 = 602 ^ (arg51 | arg51 ^ 1102846784)
    var53 = 973 & arg51 ^ arg51 | 467
    var54 = arg51 - (-1707961270 ^ 865) - -774
    var55 = var54 | 18
    var56 = var53 - -131
    var57 = -1186903064 ^ (var55 & var54) & 552
    var58 = var56 - var53 | var54 | var53
    var59 = arg51 ^ var54 - arg50 ^ arg51
    var60 = 578 | -136
    var61 = (-620 ^ arg51) + var53 + arg51
    var62 = -341 | var55 & -185324628 + var57
    result = arg50 & var58
    return result
def func6(arg42, arg43):
    var44 = func9()
    var45 = var44 + (1419961623 | ((-1585948453 & -205593263) & var44)) & ((-890 ^ arg43 | arg43) | arg42) ^ var44 + var44 + (-494468280 + arg42 - (-2139226121 - (arg42 ^ -610 + var44)))
    var46 = (-377438530 + (var45 + var44)) | (var45 & (60 - var44))
    var47 = (var44 | (arg43 + 1254095528)) & (((var45 | (var45 ^ (-296 | var46 - (75404752 - ((-994 ^ var46) & arg43 & arg43)) | (-873 ^ 939 | var44) + var44 & -227 + var45))) ^ arg43) - var45 + var44 ^ var44)
    result = (arg42 & -288) ^ 539716016
    return result
def func9():
    func7()
    result = len(xrange(18))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : 9
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var12 = func3(arg2, arg1)
    var16 = func4(arg1, var12)
    var17 = ((var16 ^ arg1) | var7) + arg2
    var18 = var17 & arg2
    var19 = (var16 - var12) - (var12 - var7)
    var20 = var7 | var7 ^ -593 ^ arg2
    var21 = arg2 ^ (-965 ^ arg1)
    if var7 < var12:
        var22 = arg2 & (var18 & var18) & var17
    else:
        var22 = 1479337820 - arg1
    var23 = var18 + var7 + var12 | 562652305
    var24 = var20 ^ (2039717377 | var21 | var19)
    var25 = var12 - var23 | var19
    var26 = var16 | var24 | 691 | arg1
    var27 = (var19 ^ var21 - var21) | arg1
    var28 = ((-149 - -579512801) & 1729816653) - -741
    var29 = -229973175 + var23 - var7
    var30 = var25 ^ var24
    if arg1 < var18:
        var31 = var17 & var17 ^ -265 + var19
    else:
        var31 = (var26 - var18) + arg2 & var12
    var32 = var20 & var25 + var19
    var33 = arg1 & var7 - var30 ^ var28
    var34 = var21 | var26
    var35 = var30 - var19
    var36 = var28 - (var24 ^ var24 + var18)
    var37 = var36 | var28
    var38 = var36 - ((var18 ^ var33) | var26)
    var39 = -1112655407 | ((var27 + var17) - var21)
    var40 = var28 + var26
    var41 = (var32 + var12) | var20 & var24
    result = ((var20 & var36) | var7) - var18 | arg1
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in range(49):
        var10 += arg8 | arg9
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(45):
        var5 += var6 & var5
    return var5
def func4(arg13, arg14):
    def func5(acc, rest):
        var15 = rest | (acc | acc)
        if acc == 0:
            return var15
        else:
            result = func5(acc - 1, var15)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 6'
    print 'arg_number: 42'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 74'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg48, arg49):
    var63 = func11(arg49, arg48)
    var64 = (1154559425 - -397 ^ var63) + arg48
    var65 = -537930040 ^ var64 | 1147145933
    if var64 < arg48:
        var66 = arg48 + (arg48 ^ var65 | var64)
    else:
        var66 = (var65 - arg49 + var64) - var65
    var67 = var63 & (var64 ^ (var65 | var65))
    var68 = var65 + var67 - arg48 & var64
    var69 = var64 + arg49
    var70 = (var65 ^ (var69 & var69)) - var64
    if var67 < arg49:
        var71 = var68 ^ var70 & 776 ^ var67
    else:
        var71 = arg48 | -355
    var72 = var64 + 445491564
    var73 = -11251312 & var63 | var65 + var70
    result = var73 | (-259 ^ arg48 - arg48 & arg49 + (448 & 4138262))
    return result
def func11(arg50, arg51):
    if arg50 < arg50:
        var52 = arg51 | (arg51 - 1502483570) & arg51
    else:
        var52 = 602 ^ (arg51 | arg51 ^ 1102846784)
    var53 = 973 & arg51 ^ arg51 | 467
    var54 = arg51 - (-1707961270 ^ 865) - -774
    var55 = var54 | 18
    var56 = var53 - -131
    var57 = -1186903064 ^ (var55 & var54) & 552
    var58 = var56 - var53 | var54 | var53
    var59 = arg51 ^ var54 - arg50 ^ arg51
    var60 = 578 | -136
    var61 = (-620 ^ arg51) + var53 + arg51
    var62 = -341 | var55 & -185324628 + var57
    result = arg50 & var58
    return result
def func6(arg42, arg43):
    var44 = func9()
    var45 = var44 + (1419961623 | ((-1585948453 & -205593263) & var44)) & ((-890 ^ arg43 | arg43) | arg42) ^ var44 + var44 + (-494468280 + arg42 - (-2139226121 - (arg42 ^ -610 + var44)))
    var46 = (-377438530 + (var45 + var44)) | (var45 & (60 - var44))
    var47 = (var44 | (arg43 + 1254095528)) & (((var45 | (var45 ^ (-296 | var46 - (75404752 - ((-994 ^ var46) & arg43 & arg43)) | (-873 ^ 939 | var44) + var44 & -227 + var45))) ^ arg43) - var45 + var44 ^ var44)
    result = (arg42 & -288) ^ 539716016
    return result
def func9():
    func7()
    result = len(xrange(18))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : 9
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var12 = func3(arg2, arg1)
    var16 = func4(arg1, var12)
    var17 = ((var16 ^ arg1) | var7) + arg2
    var18 = var17 & arg2
    var19 = (var16 - var12) - (var12 - var7)
    var20 = var7 | var7 ^ -593 ^ arg2
    var21 = arg2 ^ (-965 ^ arg1)
    if var7 < var12:
        var22 = arg2 & (var18 & var18) & var17
    else:
        var22 = 1479337820 - arg1
    var23 = var18 + var7 + var12 | 562652305
    var24 = var20 ^ (2039717377 | var21 | var19)
    var25 = var12 - var23 | var19
    var26 = var16 | var24 | 691 | arg1
    var27 = (var19 ^ var21 - var21) | arg1
    var28 = ((-149 - -579512801) & 1729816653) - -741
    var29 = -229973175 + var23 - var7
    var30 = var25 ^ var24
    if arg1 < var18:
        var31 = var17 & var17 ^ -265 + var19
    else:
        var31 = (var26 - var18) + arg2 & var12
    var32 = var20 & var25 + var19
    var33 = arg1 & var7 - var30 ^ var28
    var34 = var21 | var26
    var35 = var30 - var19
    var36 = var28 - (var24 ^ var24 + var18)
    var37 = var36 | var28
    var38 = var36 - ((var18 ^ var33) | var26)
    var39 = -1112655407 | ((var27 + var17) - var21)
    var40 = var28 + var26
    var41 = (var32 + var12) | var20 & var24
    result = ((var20 & var36) | var7) - var18 | arg1
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in range(49):
        var10 += arg8 | arg9
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(45):
        var5 += var6 & var5
    return var5
def func4(arg13, arg14):
    def func5(acc, rest):
        var15 = rest | (acc | acc)
        if acc == 0:
            return var15
        else:
            result = func5(acc - 1, var15)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 6'
    print 'arg_number: 42'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 74'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg48, arg49):
    var63 = func11(arg49, arg48)
    var64 = (1154559425 - -397 ^ var63) + arg48
    var65 = -537930040 ^ var64 | 1147145933
    if var64 < arg48:
        var66 = arg48 + (arg48 ^ var65 | var64)
    else:
        var66 = (var65 - arg49 + var64) - var65
    var67 = var63 & (var64 ^ (var65 | var65))
    var68 = var65 + var67 - arg48 & var64
    var69 = var64 + arg49
    var70 = (var65 ^ (var69 & var69)) - var64
    if var67 < arg49:
        var71 = var68 ^ var70 & 776 ^ var67
    else:
        var71 = arg48 | -355
    var72 = var64 + 445491564
    var73 = -11251312 & var63 | var65 + var70
    result = var73 | (-259 ^ arg48 - arg48 & arg49 + (448 & 4138262))
    return result
def func11(arg50, arg51):
    if arg50 < arg50:
        var52 = arg51 | (arg51 - 1502483570) & arg51
    else:
        var52 = 602 ^ (arg51 | arg51 ^ 1102846784)
    var53 = 973 & arg51 ^ arg51 | 467
    var54 = arg51 - (-1707961270 ^ 865) - -774
    var55 = var54 | 18
    var56 = var53 - -131
    var57 = -1186903064 ^ (var55 & var54) & 552
    var58 = var56 - var53 | var54 | var53
    var59 = arg51 ^ var54 - arg50 ^ arg51
    var60 = 578 | -136
    var61 = (-620 ^ arg51) + var53 + arg51
    var62 = -341 | var55 & -185324628 + var57
    result = arg50 & var58
    return result
def func6(arg42, arg43):
    var44 = func9()
    var45 = var44 + (1419961623 | ((-1585948453 & -205593263) & var44)) & ((-890 ^ arg43 | arg43) | arg42) ^ var44 + var44 + (-494468280 + arg42 - (-2139226121 - (arg42 ^ -610 + var44)))
    var46 = (-377438530 + (var45 + var44)) | (var45 & (60 - var44))
    var47 = (var44 | (arg43 + 1254095528)) & (((var45 | (var45 ^ (-296 | var46 - (75404752 - ((-994 ^ var46) & arg43 & arg43)) | (-873 ^ 939 | var44) + var44 & -227 + var45))) ^ arg43) - var45 + var44 ^ var44)
    result = (arg42 & -288) ^ 539716016
    return result
def func9():
    func7()
    result = len(xrange(18))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : 9
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var12 = func3(arg2, arg1)
    var16 = func4(arg1, var12)
    var17 = ((var16 ^ arg1) | var7) + arg2
    var18 = var17 & arg2
    var19 = (var16 - var12) - (var12 - var7)
    var20 = var7 | var7 ^ -593 ^ arg2
    var21 = arg2 ^ (-965 ^ arg1)
    if var7 < var12:
        var22 = arg2 & (var18 & var18) & var17
    else:
        var22 = 1479337820 - arg1
    var23 = var18 + var7 + var12 | 562652305
    var24 = var20 ^ (2039717377 | var21 | var19)
    var25 = var12 - var23 | var19
    var26 = var16 | var24 | 691 | arg1
    var27 = (var19 ^ var21 - var21) | arg1
    var28 = ((-149 - -579512801) & 1729816653) - -741
    var29 = -229973175 + var23 - var7
    var30 = var25 ^ var24
    if arg1 < var18:
        var31 = var17 & var17 ^ -265 + var19
    else:
        var31 = (var26 - var18) + arg2 & var12
    var32 = var20 & var25 + var19
    var33 = arg1 & var7 - var30 ^ var28
    var34 = var21 | var26
    var35 = var30 - var19
    var36 = var28 - (var24 ^ var24 + var18)
    var37 = var36 | var28
    var38 = var36 - ((var18 ^ var33) | var26)
    var39 = -1112655407 | ((var27 + var17) - var21)
    var40 = var28 + var26
    var41 = (var32 + var12) | var20 & var24
    result = ((var20 & var36) | var7) - var18 | arg1
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in range(49):
        var10 += arg8 | arg9
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(45):
        var5 += var6 & var5
    return var5
def func4(arg13, arg14):
    def func5(acc, rest):
        var15 = rest | (acc | acc)
        if acc == 0:
            return var15
        else:
            result = func5(acc - 1, var15)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 6'
    print 'arg_number: 42'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 74'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg48, arg49):
    var63 = func11(arg49, arg48)
    var64 = (1154559425 - -397 ^ var63) + arg48
    var65 = -537930040 ^ var64 | 1147145933
    if var64 < arg48:
        var66 = arg48 + (arg48 ^ var65 | var64)
    else:
        var66 = (var65 - arg49 + var64) - var65
    var67 = var63 & (var64 ^ (var65 | var65))
    var68 = var65 + var67 - arg48 & var64
    var69 = var64 + arg49
    var70 = (var65 ^ (var69 & var69)) - var64
    if var67 < arg49:
        var71 = var68 ^ var70 & 776 ^ var67
    else:
        var71 = arg48 | -355
    var72 = var64 + 445491564
    var73 = -11251312 & var63 | var65 + var70
    result = var73 | (-259 ^ arg48 - arg48 & arg49 + (448 & 4138262))
    return result
def func11(arg50, arg51):
    if arg50 < arg50:
        var52 = arg51 | (arg51 - 1502483570) & arg51
    else:
        var52 = 602 ^ (arg51 | arg51 ^ 1102846784)
    var53 = 973 & arg51 ^ arg51 | 467
    var54 = arg51 - (-1707961270 ^ 865) - -774
    var55 = var54 | 18
    var56 = var53 - -131
    var57 = -1186903064 ^ (var55 & var54) & 552
    var58 = var56 - var53 | var54 | var53
    var59 = arg51 ^ var54 - arg50 ^ arg51
    var60 = 578 | -136
    var61 = (-620 ^ arg51) + var53 + arg51
    var62 = -341 | var55 & -185324628 + var57
    result = arg50 & var58
    return result
def func6(arg42, arg43):
    var44 = func9()
    var45 = var44 + (1419961623 | ((-1585948453 & -205593263) & var44)) & ((-890 ^ arg43 | arg43) | arg42) ^ var44 + var44 + (-494468280 + arg42 - (-2139226121 - (arg42 ^ -610 + var44)))
    var46 = (-377438530 + (var45 + var44)) | (var45 & (60 - var44))
    var47 = (var44 | (arg43 + 1254095528)) & (((var45 | (var45 ^ (-296 | var46 - (75404752 - ((-994 ^ var46) & arg43 & arg43)) | (-873 ^ 939 | var44) + var44 & -227 + var45))) ^ arg43) - var45 + var44 ^ var44)
    result = (arg42 & -288) ^ 539716016
    return result
def func9():
    func7()
    result = len(xrange(18))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : 9
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var12 = func3(arg2, arg1)
    var16 = func4(arg1, var12)
    var17 = ((var16 ^ arg1) | var7) + arg2
    var18 = var17 & arg2
    var19 = (var16 - var12) - (var12 - var7)
    var20 = var7 | var7 ^ -593 ^ arg2
    var21 = arg2 ^ (-965 ^ arg1)
    if var7 < var12:
        var22 = arg2 & (var18 & var18) & var17
    else:
        var22 = 1479337820 - arg1
    var23 = var18 + var7 + var12 | 562652305
    var24 = var20 ^ (2039717377 | var21 | var19)
    var25 = var12 - var23 | var19
    var26 = var16 | var24 | 691 | arg1
    var27 = (var19 ^ var21 - var21) | arg1
    var28 = ((-149 - -579512801) & 1729816653) - -741
    var29 = -229973175 + var23 - var7
    var30 = var25 ^ var24
    if arg1 < var18:
        var31 = var17 & var17 ^ -265 + var19
    else:
        var31 = (var26 - var18) + arg2 & var12
    var32 = var20 & var25 + var19
    var33 = arg1 & var7 - var30 ^ var28
    var34 = var21 | var26
    var35 = var30 - var19
    var36 = var28 - (var24 ^ var24 + var18)
    var37 = var36 | var28
    var38 = var36 - ((var18 ^ var33) | var26)
    var39 = -1112655407 | ((var27 + var17) - var21)
    var40 = var28 + var26
    var41 = (var32 + var12) | var20 & var24
    result = ((var20 & var36) | var7) - var18 | arg1
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in range(49):
        var10 += arg8 | arg9
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(45):
        var5 += var6 & var5
    return var5
def func4(arg13, arg14):
    def func5(acc, rest):
        var15 = rest | (acc | acc)
        if acc == 0:
            return var15
        else:
            result = func5(acc - 1, var15)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 6'
    print 'arg_number: 42'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 74'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg48, arg49):
    var63 = func11(arg49, arg48)
    var64 = (1154559425 - -397 ^ var63) + arg48
    var65 = -537930040 ^ var64 | 1147145933
    if var64 < arg48:
        var66 = arg48 + (arg48 ^ var65 | var64)
    else:
        var66 = (var65 - arg49 + var64) - var65
    var67 = var63 & (var64 ^ (var65 | var65))
    var68 = var65 + var67 - arg48 & var64
    var69 = var64 + arg49
    var70 = (var65 ^ (var69 & var69)) - var64
    if var67 < arg49:
        var71 = var68 ^ var70 & 776 ^ var67
    else:
        var71 = arg48 | -355
    var72 = var64 + 445491564
    var73 = -11251312 & var63 | var65 + var70
    result = var73 | (-259 ^ arg48 - arg48 & arg49 + (448 & 4138262))
    return result
def func11(arg50, arg51):
    if arg50 < arg50:
        var52 = arg51 | (arg51 - 1502483570) & arg51
    else:
        var52 = 602 ^ (arg51 | arg51 ^ 1102846784)
    var53 = 973 & arg51 ^ arg51 | 467
    var54 = arg51 - (-1707961270 ^ 865) - -774
    var55 = var54 | 18
    var56 = var53 - -131
    var57 = -1186903064 ^ (var55 & var54) & 552
    var58 = var56 - var53 | var54 | var53
    var59 = arg51 ^ var54 - arg50 ^ arg51
    var60 = 578 | -136
    var61 = (-620 ^ arg51) + var53 + arg51
    var62 = -341 | var55 & -185324628 + var57
    result = arg50 & var58
    return result
def func6(arg42, arg43):
    var44 = func9()
    var45 = var44 + (1419961623 | ((-1585948453 & -205593263) & var44)) & ((-890 ^ arg43 | arg43) | arg42) ^ var44 + var44 + (-494468280 + arg42 - (-2139226121 - (arg42 ^ -610 + var44)))
    var46 = (-377438530 + (var45 + var44)) | (var45 & (60 - var44))
    var47 = (var44 | (arg43 + 1254095528)) & (((var45 | (var45 ^ (-296 | var46 - (75404752 - ((-994 ^ var46) & arg43 & arg43)) | (-873 ^ 939 | var44) + var44 & -227 + var45))) ^ arg43) - var45 + var44 ^ var44)
    result = (arg42 & -288) ^ 539716016
    return result
def func9():
    func7()
    result = len(xrange(18))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : 9
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var12 = func3(arg2, arg1)
    var16 = func4(arg1, var12)
    var17 = ((var16 ^ arg1) | var7) + arg2
    var18 = var17 & arg2
    var19 = (var16 - var12) - (var12 - var7)
    var20 = var7 | var7 ^ -593 ^ arg2
    var21 = arg2 ^ (-965 ^ arg1)
    if var7 < var12:
        var22 = arg2 & (var18 & var18) & var17
    else:
        var22 = 1479337820 - arg1
    var23 = var18 + var7 + var12 | 562652305
    var24 = var20 ^ (2039717377 | var21 | var19)
    var25 = var12 - var23 | var19
    var26 = var16 | var24 | 691 | arg1
    var27 = (var19 ^ var21 - var21) | arg1
    var28 = ((-149 - -579512801) & 1729816653) - -741
    var29 = -229973175 + var23 - var7
    var30 = var25 ^ var24
    if arg1 < var18:
        var31 = var17 & var17 ^ -265 + var19
    else:
        var31 = (var26 - var18) + arg2 & var12
    var32 = var20 & var25 + var19
    var33 = arg1 & var7 - var30 ^ var28
    var34 = var21 | var26
    var35 = var30 - var19
    var36 = var28 - (var24 ^ var24 + var18)
    var37 = var36 | var28
    var38 = var36 - ((var18 ^ var33) | var26)
    var39 = -1112655407 | ((var27 + var17) - var21)
    var40 = var28 + var26
    var41 = (var32 + var12) | var20 & var24
    result = ((var20 & var36) | var7) - var18 | arg1
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in range(49):
        var10 += arg8 | arg9
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(45):
        var5 += var6 & var5
    return var5
def func4(arg13, arg14):
    def func5(acc, rest):
        var15 = rest | (acc | acc)
        if acc == 0:
            return var15
        else:
            result = func5(acc - 1, var15)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 6'
    print 'arg_number: 42'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 74'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg48, arg49):
    var63 = func11(arg49, arg48)
    var64 = (1154559425 - -397 ^ var63) + arg48
    var65 = -537930040 ^ var64 | 1147145933
    if var64 < arg48:
        var66 = arg48 + (arg48 ^ var65 | var64)
    else:
        var66 = (var65 - arg49 + var64) - var65
    var67 = var63 & (var64 ^ (var65 | var65))
    var68 = var65 + var67 - arg48 & var64
    var69 = var64 + arg49
    var70 = (var65 ^ (var69 & var69)) - var64
    if var67 < arg49:
        var71 = var68 ^ var70 & 776 ^ var67
    else:
        var71 = arg48 | -355
    var72 = var64 + 445491564
    var73 = -11251312 & var63 | var65 + var70
    result = var73 | (-259 ^ arg48 - arg48 & arg49 + (448 & 4138262))
    return result
def func11(arg50, arg51):
    if arg50 < arg50:
        var52 = arg51 | (arg51 - 1502483570) & arg51
    else:
        var52 = 602 ^ (arg51 | arg51 ^ 1102846784)
    var53 = 973 & arg51 ^ arg51 | 467
    var54 = arg51 - (-1707961270 ^ 865) - -774
    var55 = var54 | 18
    var56 = var53 - -131
    var57 = -1186903064 ^ (var55 & var54) & 552
    var58 = var56 - var53 | var54 | var53
    var59 = arg51 ^ var54 - arg50 ^ arg51
    var60 = 578 | -136
    var61 = (-620 ^ arg51) + var53 + arg51
    var62 = -341 | var55 & -185324628 + var57
    result = arg50 & var58
    return result
def func6(arg42, arg43):
    var44 = func9()
    var45 = var44 + (1419961623 | ((-1585948453 & -205593263) & var44)) & ((-890 ^ arg43 | arg43) | arg42) ^ var44 + var44 + (-494468280 + arg42 - (-2139226121 - (arg42 ^ -610 + var44)))
    var46 = (-377438530 + (var45 + var44)) | (var45 & (60 - var44))
    var47 = (var44 | (arg43 + 1254095528)) & (((var45 | (var45 ^ (-296 | var46 - (75404752 - ((-994 ^ var46) & arg43 & arg43)) | (-873 ^ 939 | var44) + var44 & -227 + var45))) ^ arg43) - var45 + var44 ^ var44)
    result = (arg42 & -288) ^ 539716016
    return result
def func9():
    func7()
    result = len(xrange(18))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : 9
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var12 = func3(arg2, arg1)
    var16 = func4(arg1, var12)
    var17 = ((var16 ^ arg1) | var7) + arg2
    var18 = var17 & arg2
    var19 = (var16 - var12) - (var12 - var7)
    var20 = var7 | var7 ^ -593 ^ arg2
    var21 = arg2 ^ (-965 ^ arg1)
    if var7 < var12:
        var22 = arg2 & (var18 & var18) & var17
    else:
        var22 = 1479337820 - arg1
    var23 = var18 + var7 + var12 | 562652305
    var24 = var20 ^ (2039717377 | var21 | var19)
    var25 = var12 - var23 | var19
    var26 = var16 | var24 | 691 | arg1
    var27 = (var19 ^ var21 - var21) | arg1
    var28 = ((-149 - -579512801) & 1729816653) - -741
    var29 = -229973175 + var23 - var7
    var30 = var25 ^ var24
    if arg1 < var18:
        var31 = var17 & var17 ^ -265 + var19
    else:
        var31 = (var26 - var18) + arg2 & var12
    var32 = var20 & var25 + var19
    var33 = arg1 & var7 - var30 ^ var28
    var34 = var21 | var26
    var35 = var30 - var19
    var36 = var28 - (var24 ^ var24 + var18)
    var37 = var36 | var28
    var38 = var36 - ((var18 ^ var33) | var26)
    var39 = -1112655407 | ((var27 + var17) - var21)
    var40 = var28 + var26
    var41 = (var32 + var12) | var20 & var24
    result = ((var20 & var36) | var7) - var18 | arg1
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in range(49):
        var10 += arg8 | arg9
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(45):
        var5 += var6 & var5
    return var5
def func4(arg13, arg14):
    def func5(acc, rest):
        var15 = rest | (acc | acc)
        if acc == 0:
            return var15
        else:
            result = func5(acc - 1, var15)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 6'
    print 'arg_number: 42'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 74'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg48, arg49):
    var63 = func11(arg49, arg48)
    var64 = (1154559425 - -397 ^ var63) + arg48
    var65 = -537930040 ^ var64 | 1147145933
    if var64 < arg48:
        var66 = arg48 + (arg48 ^ var65 | var64)
    else:
        var66 = (var65 - arg49 + var64) - var65
    var67 = var63 & (var64 ^ (var65 | var65))
    var68 = var65 + var67 - arg48 & var64
    var69 = var64 + arg49
    var70 = (var65 ^ (var69 & var69)) - var64
    if var67 < arg49:
        var71 = var68 ^ var70 & 776 ^ var67
    else:
        var71 = arg48 | -355
    var72 = var64 + 445491564
    var73 = -11251312 & var63 | var65 + var70
    result = var73 | (-259 ^ arg48 - arg48 & arg49 + (448 & 4138262))
    return result
def func11(arg50, arg51):
    if arg50 < arg50:
        var52 = arg51 | (arg51 - 1502483570) & arg51
    else:
        var52 = 602 ^ (arg51 | arg51 ^ 1102846784)
    var53 = 973 & arg51 ^ arg51 | 467
    var54 = arg51 - (-1707961270 ^ 865) - -774
    var55 = var54 | 18
    var56 = var53 - -131
    var57 = -1186903064 ^ (var55 & var54) & 552
    var58 = var56 - var53 | var54 | var53
    var59 = arg51 ^ var54 - arg50 ^ arg51
    var60 = 578 | -136
    var61 = (-620 ^ arg51) + var53 + arg51
    var62 = -341 | var55 & -185324628 + var57
    result = arg50 & var58
    return result
def func6(arg42, arg43):
    var44 = func9()
    var45 = var44 + (1419961623 | ((-1585948453 & -205593263) & var44)) & ((-890 ^ arg43 | arg43) | arg42) ^ var44 + var44 + (-494468280 + arg42 - (-2139226121 - (arg42 ^ -610 + var44)))
    var46 = (-377438530 + (var45 + var44)) | (var45 & (60 - var44))
    var47 = (var44 | (arg43 + 1254095528)) & (((var45 | (var45 ^ (-296 | var46 - (75404752 - ((-994 ^ var46) & arg43 & arg43)) | (-873 ^ 939 | var44) + var44 & -227 + var45))) ^ arg43) - var45 + var44 ^ var44)
    result = (arg42 & -288) ^ 539716016
    return result
def func9():
    func7()
    result = len(xrange(18))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : 9
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var12 = func3(arg2, arg1)
    var16 = func4(arg1, var12)
    var17 = ((var16 ^ arg1) | var7) + arg2
    var18 = var17 & arg2
    var19 = (var16 - var12) - (var12 - var7)
    var20 = var7 | var7 ^ -593 ^ arg2
    var21 = arg2 ^ (-965 ^ arg1)
    if var7 < var12:
        var22 = arg2 & (var18 & var18) & var17
    else:
        var22 = 1479337820 - arg1
    var23 = var18 + var7 + var12 | 562652305
    var24 = var20 ^ (2039717377 | var21 | var19)
    var25 = var12 - var23 | var19
    var26 = var16 | var24 | 691 | arg1
    var27 = (var19 ^ var21 - var21) | arg1
    var28 = ((-149 - -579512801) & 1729816653) - -741
    var29 = -229973175 + var23 - var7
    var30 = var25 ^ var24
    if arg1 < var18:
        var31 = var17 & var17 ^ -265 + var19
    else:
        var31 = (var26 - var18) + arg2 & var12
    var32 = var20 & var25 + var19
    var33 = arg1 & var7 - var30 ^ var28
    var34 = var21 | var26
    var35 = var30 - var19
    var36 = var28 - (var24 ^ var24 + var18)
    var37 = var36 | var28
    var38 = var36 - ((var18 ^ var33) | var26)
    var39 = -1112655407 | ((var27 + var17) - var21)
    var40 = var28 + var26
    var41 = (var32 + var12) | var20 & var24
    result = ((var20 & var36) | var7) - var18 | arg1
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in range(49):
        var10 += arg8 | arg9
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(45):
        var5 += var6 & var5
    return var5
def func4(arg13, arg14):
    def func5(acc, rest):
        var15 = rest | (acc | acc)
        if acc == 0:
            return var15
        else:
            result = func5(acc - 1, var15)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 6'
    print 'arg_number: 42'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 74'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,def func10(arg48, arg49):
    var63 = func11(arg49, arg48)
    var64 = (1154559425 - -397 ^ var63) + arg48
    var65 = -537930040 ^ var64 | 1147145933
    if var64 < arg48:
        var66 = arg48 + (arg48 ^ var65 | var64)
    else:
        var66 = (var65 - arg49 + var64) - var65
    var67 = var63 & (var64 ^ (var65 | var65))
    var68 = var65 + var67 - arg48 & var64
    var69 = var64 + arg49
    var70 = (var65 ^ (var69 & var69)) - var64
    if var67 < arg49:
        var71 = var68 ^ var70 & 776 ^ var67
    else:
        var71 = arg48 | -355
    var72 = var64 + 445491564
    var73 = -11251312 & var63 | var65 + var70
    result = var73 | (-259 ^ arg48 - arg48 & arg49 + (448 & 4138262))
    return result
def func11(arg50, arg51):
    if arg50 < arg50:
        var52 = arg51 | (arg51 - 1502483570) & arg51
    else:
        var52 = 602 ^ (arg51 | arg51 ^ 1102846784)
    var53 = 973 & arg51 ^ arg51 | 467
    var54 = arg51 - (-1707961270 ^ 865) - -774
    var55 = var54 | 18
    var56 = var53 - -131
    var57 = -1186903064 ^ (var55 & var54) & 552
    var58 = var56 - var53 | var54 | var53
    var59 = arg51 ^ var54 - arg50 ^ arg51
    var60 = 578 | -136
    var61 = (-620 ^ arg51) + var53 + arg51
    var62 = -341 | var55 & -185324628 + var57
    result = arg50 & var58
    return result
def func6(arg42, arg43):
    var44 = func9()
    var45 = var44 + (1419961623 | ((-1585948453 & -205593263) & var44)) & ((-890 ^ arg43 | arg43) | arg42) ^ var44 + var44 + (-494468280 + arg42 - (-2139226121 - (arg42 ^ -610 + var44)))
    var46 = (-377438530 + (var45 + var44)) | (var45 & (60 - var44))
    var47 = (var44 | (arg43 + 1254095528)) & (((var45 | (var45 ^ (-296 | var46 - (75404752 - ((-994 ^ var46) & arg43 & arg43)) | (-873 ^ 939 | var44) + var44 & -227 + var45))) ^ arg43) - var45 + var44 ^ var44)
    result = (arg42 & -288) ^ 539716016
    return result
def func9():
    func7()
    result = len(xrange(18))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : 9
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var12 = func3(arg2, arg1)
    var16 = func4(arg1, var12)
    var17 = ((var16 ^ arg1) | var7) + arg2
    var18 = var17 & arg2
    var19 = (var16 - var12) - (var12 - var7)
    var20 = var7 | var7 ^ -593 ^ arg2
    var21 = arg2 ^ (-965 ^ arg1)
    if var7 < var12:
        var22 = arg2 & (var18 & var18) & var17
    else:
        var22 = 1479337820 - arg1
    var23 = var18 + var7 + var12 | 562652305
    var24 = var20 ^ (2039717377 | var21 | var19)
    var25 = var12 - var23 | var19
    var26 = var16 | var24 | 691 | arg1
    var27 = (var19 ^ var21 - var21) | arg1
    var28 = ((-149 - -579512801) & 1729816653) - -741
    var29 = -229973175 + var23 - var7
    var30 = var25 ^ var24
    if arg1 < var18:
        var31 = var17 & var17 ^ -265 + var19
    else:
        var31 = (var26 - var18) + arg2 & var12
    var32 = var20 & var25 + var19
    var33 = arg1 & var7 - var30 ^ var28
    var34 = var21 | var26
    var35 = var30 - var19
    var36 = var28 - (var24 ^ var24 + var18)
    var37 = var36 | var28
    var38 = var36 - ((var18 ^ var33) | var26)
    var39 = -1112655407 | ((var27 + var17) - var21)
    var40 = var28 + var26
    var41 = (var32 + var12) | var20 & var24
    result = ((var20 & var36) | var7) - var18 | arg1
    return result
def func3(arg8, arg9):
    var10 = 0
    for var11 in range(49):
        var10 += arg8 | arg9
    return var10
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(45):
        var5 += var6 & var5
    return var5
def func4(arg13, arg14):
    def func5(acc, rest):
        var15 = rest | (acc | acc)
        if acc == 0:
            return var15
        else:
            result = func5(acc - 1, var15)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 3'
    print 'func_number: 6'
    print 'arg_number: 42'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 74'
    for i in xrange(25000):
        x = 5
        x = func10(x, i)
        print x,
